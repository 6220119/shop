# import Post from "./generated/prisma.graphql"
# import Product from "./generated/prisma.graphql"
# import ID from "./generated/prisma.graphql"

type Query {
  feed: [Post!]!
  drafts: [Post!]!
  post(id: ID!): Post
  me: User
  products(
    where: ProductWhereInput
    orderBy: ProductOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Product]!
  order(id: ID!): Order!
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createDraft(title: String!, text: String!): Post!
  publish(id: ID!): Post!
  deletePost(id: ID!): Post!
  createOrder: Order!
  addProductToOrder(
    orderId: String!
    productId: String!
    quantity: Int
  ): OrderRow!
}

type Order implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  rows(
    where: OrderRowWhereInput
    orderBy: OrderRowOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [OrderRow!]
  user(where: UserWhereInput): User
  total: Int!
}

type OrderRow implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  quantity: Int!
  product(where: ProductWhereInput): Product!
  order(where: OrderWhereInput): Order!
  total: Int!
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
  posts: [Post!]!
}
